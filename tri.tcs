#version 400 compatibility
#extension GL_ARB_tessellation_shader : enable

uniform float uZ01, uZ12, uZ20;
uniform int uOuter01, uOuter12, uOuter20, uInner;
uniform bool uAdaptToZs;


layout( vertices = 3 ) out;

void main( ){
	gl_out[ gl_InvocationID ].gl_Position = gl_in[ gl_InvocationID ].gl_Position;
	
	if( uAdaptToZs ){
		float newuZ12 = float(abs(uZ12) * 25);
		float newuZ20 = float(abs(uZ20) * 25);
		float newuZ01 = float(abs(uZ01) * 25);
		float mah_avg = (newuZ01 + newuZ12 + newuZ20) / 2;
		gl_TessLevelOuter[0] = newuZ12;
		gl_TessLevelOuter[1] = newuZ20;
		gl_TessLevelOuter[2] = newuZ01;
		gl_TessLevelInner[0] = gl_TessLevelInner[1] = float(mah_avg);
	}else{
		gl_TessLevelOuter[0] = float(uOuter12);
		gl_TessLevelOuter[1] = float(uOuter20);
		gl_TessLevelOuter[2] = float(uOuter01);
		gl_TessLevelInner[0] = gl_TessLevelInner[1] = float(uInner);
	}
}
